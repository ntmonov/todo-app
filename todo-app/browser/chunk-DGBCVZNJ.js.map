{
  "version": 3,
  "sources": ["src/app/features/todos/services/todos.service.ts", "src/app/features/todos/components/todo-item/todo-item.component.ts", "src/app/features/todos/components/todo-item/todo-item.component.html", "src/app/features/todos/pages/todos-list/todos-list.component.ts", "src/app/features/todos/pages/todos-list/todos-list.component.html"],
  "sourcesContent": ["import { Injectable } from \"@angular/core\";\r\nimport { Todo } from \"../models/Todo\";\r\n\r\n@Injectable()\r\nexport class TodosService {\r\n  private todos: Todo[] = [\r\n    {\r\n      id: 1,\r\n      title: 'Todo One Title',\r\n      content: 'Lorem ipsum dolor sit amet.',\r\n      isCompleted: false\r\n    }\r\n  ]\r\n\r\n  getAllTodos() {\r\n    return this.todos;\r\n  }\r\n}\r\n", "import { Component, Input } from '@angular/core';\r\nimport { Todo } from '../../models/Todo';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-todo-item',\r\n  standalone: true,\r\n  imports: [NgClass],\r\n  templateUrl: './todo-item.component.html',\r\n  styleUrl: './todo-item.component.css'\r\n})\r\nexport class TodoItemComponent {\r\n  @Input() todo!: Todo;\r\n  isOpened = false;\r\n\r\n  toggleTodoContent() {\r\n    this.isOpened = !this.isOpened;\r\n  }\r\n\r\n  toggleIsCompleted() {\r\n    this.todo.isCompleted = !this.todo.isCompleted;\r\n  }\r\n}\r\n", "<img\r\n  [src]=\"isOpened ?\r\n    '../../../../../assets/chevron-up.svg' :\r\n    '../../../../../assets/chevron-down.svg'\"\r\n  class=\"position-absolute\"\r\n  (click)=\"toggleTodoContent()\">\r\n<div class=\"title\" [ngClass]=\"{'isCompleted': todo.isCompleted}\">{{ todo.title }}</div>\r\n@if (isOpened) {\r\n  <div class=\"content\">{{ todo.content }}</div>\r\n}\r\n<input\r\n  type=\"checkbox\"\r\n  [checked]=\"todo.isCompleted\"\r\n  (change)=\"toggleIsCompleted()\"\r\n/>\r\n", "import { Component, inject } from '@angular/core';\r\nimport { TodosService } from '../../services/todos.service';\r\nimport { TodoItemComponent } from \"../../components/todo-item/todo-item.component\";\r\n\r\n@Component({\r\n  selector: 'app-todos-list',\r\n  standalone: true,\r\n  imports: [TodoItemComponent],\r\n  providers: [TodosService],\r\n  templateUrl: './todos-list.component.html',\r\n  styleUrl: './todos-list.component.css'\r\n})\r\nexport class TodosListComponent {\r\n\r\n  constructor(\r\n    private todosService: TodosService\r\n  ) {}\r\n\r\n  getAllTodos() {\r\n    return this.todosService.getAllTodos();\r\n  }\r\n}\r\n", "List\r\n<div\r\n  class=\"todos-list\">\r\n  @for(todo of getAllTodos(); track todo.id) {\r\n    <div >\r\n      <app-todo-item [todo]=\"todo\"></app-todo-item>\r\n    </div>\r\n  }\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["TodosService", "constructor", "todos", "id", "title", "content", "isCompleted", "getAllTodos", "factory", "\u0275fac", "_TodosService", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "ctx_r0", "todo", "content", "TodoItemComponent", "constructor", "isOpened", "toggleTodoContent", "toggleIsCompleted", "isCompleted", "selectors", "inputs", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275listener", "\u0275\u0275template", "TodoItemComponent_Conditional_3_Template", "\u0275\u0275property", "\u0275\u0275sanitizeUrl", "\u0275\u0275pureFunction1", "_c0", "title", "\u0275\u0275conditional", "NgClass", "styles", "_TodoItemComponent", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "todo_r1", "TodosListComponent", "constructor", "todosService", "getAllTodos", "\u0275\u0275directiveInject", "TodosService", "selectors", "standalone", "features", "\u0275\u0275ProvidersFeature", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275text", "\u0275\u0275repeaterCreate", "TodosListComponent_For_3_Template", "_forTrack0", "\u0275\u0275repeater", "TodoItemComponent", "styles", "_TodosListComponent"]
}
